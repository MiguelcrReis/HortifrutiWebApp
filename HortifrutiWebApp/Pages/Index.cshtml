@page
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}

<div class="text-center">
	<h1 class="display-4">Bem-vindo a HortiFruti Reis!</h1>
	<h5>A Hortifruti que coloca açúcar no mamão para você.</h5>
	<hr />
</div>

@if (Model.Products.Count > 0)
{
	<div class="row">
		<div class="col-12 col-md-6">
			<form class="form-inline justify-content-center justify-content-md-start mb-sm-3 mb-md-0" action="/Index" method="get" id="formSearch">
				<input type="text" name="q" id="q" placeholder="Nome do produto" class="form-control form-control-sm mr-sm-2" />
				<input type="hidden" name="s" id="s" value="0" />
				<input type="hidden" name="p" id="p" value="1" />
				<button class="btn btn-sm btn-success my-2 my-sm-0 form-control form-control" type="submit">Buscar</button>
			</form>
		</div>
		<div class="col-12 col-md-6">
			<div class="d-flex flex-xl-row-reverse justify-content-md-start justify-content-center">
				<form class="form-inline ml-3 d-inline-block">
					<select class="form-control custom-select-sm sequenceSelect" @*id="sequenceSelect"*@>
						@*<option value="0">Selecione a ordem de exibição</option>*@
						<option value="1">Filtrar pelo nome do produto</option>
						<option value="2">Filtrar pelo menor preço</option>
						<option value="3">Filtrar pelo maior preço</option>
					</select>
				</form>
				<nav class="d-inline-block">
					<ul class="pagination pagination-sm my-0">
						@for (int i = 1; i <= Model.QuantityPages; i++)
						{
							if (i == Model.CurrentPage)
							{
								<li class="page-item disabled"><button class="page-link" value="@i">@i</button></li>
							}
							else
							{
								<li class="page-item"><button class="page-link" value="@i">@i</button></li>
							}
						}
					</ul>
				</nav>
			</div>
		</div>
	</div>
	<hr class="mt-3" />
	<div class="row">
		@foreach (var product in Model.Products)
		{
			<div class="col-xl-2 col-lg-3 col-md-4 col-sm-6 d-flex align-items-stretch">
				<div class="card text-center bg-light mb-4">
					<img class="card-img-top" src="/img/product/@String.Concat(product.ProductId.ToString("D6"), ".jpg")"
						 alt="@product.Name image" />
					<div class="card-header">
						R$ @product.Price.Value.ToString("F2")
					</div>
					<div class="card-body">
						<h5 class="card-title">@product.Name</h5>
						<p class="card-text">@product.Descrition</p>
					</div>
					<div class="card-footer">
						@if (product.Stock > 0)
						{
							<div><a href="#" class="btn btn-success">Adicionar ao Carrinho</a></div>
							<small class="text-success">Estoque: @product.Stock</small>
						}
						else
						{
							<div>
								<button class="btn btn-light disabled" disabled>
									<small>Aguardando Reabastecimento</small>
								</button>
							</div>
							<small class="text-danger"><b>Produto Esgotado</b></small>
						}
					</div>
				</div>
			</div>
		}
	</div>
	<hr class="mt-3" />
	<div class="row">
		<div class="col-12">
			<div class="d-flex flex-xl-row-reverse justify-content-md-start justify-content-center">
				<nav class="d-inline-block">
					<ul class="pagination pagination-sm my-0">
						@for (int i = 1; i <= Model.QuantityPages; i++)
						{
							if (i == Model.CurrentPage)
							{
								<li class="page-item disabled"><button class="page-link" value="@i">@i</button></li>
							}
							else
							{
								<li class="page-item"><button class="page-link" value="@i">@i</button></li>
							}
						}
					</ul>
				</nav>
			</div>
		</div>
	</div>
	<hr class="mt-3" />
}
else
{
	if (Request.QueryString.HasValue)
	{<div class="col-12"><h1>Nenhum resultado encotrado para <b>@Request.Query["search"]</b>.</h1></div>}
else
{<div class="col-12"><h1>Não há produtos cadastrados.</h1></div>}

}

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

	@*Função js para retornar a QueryString da page*@

	<script>
		function getUrlsVars() {
			var vars = [], hash;
			var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');

			for (var i = 0; i < hashes.length; i++) {
				hash = hashes[i].split('=');
				vars.push(hash[0]);
				vars[hash[0]] = hash[1];
			}
			return vars;
		}

		$(document).ready(function () {
			var qs = getUrlsVars();

			if (qs["s"] != null) {
				$(".sequenceSelect").val(qs["s"])
				$("#s").val(qs["s"])
			} else {
				$(".sequenceSelect").val("1")
				$("#s").val("1")
			}

			if (qs["q"] != null) {
				$("#q").val(qs["q"])
			}
		});

		$(".sequenceSelect").change(function () {
			$("#s").val($(this).val());
			$("#formSearch").submit();
		});

		$(".page-link").click(function () {
			$("#p").val($(this).val());
			$("#formSearch").submit();
		})
	</script>
}
